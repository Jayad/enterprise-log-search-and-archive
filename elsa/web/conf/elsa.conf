{
	"connectors": {
		#"sirt": {
		#	"url": "http://myapp/enqueue",
		#}
	},
	"dashboards": {
		#"mydashboard": {
		#	"file": "/usr/local/elsa/mydashboard_queries.csv",
		#	"package": "Dashboard::File"
		#}
	},
	"transforms": {
#		"database": {
#			"Test": {
#				"alias": "test",
#				"dsn": "dbi:mysql:database=test",
#				"username": "root",
#				"password": "",
#				"query_template": "SELECT %s FROM test WHERE (ip=INET_ATON(?) OR ip=INET_ATON(?)) AND start_time <= FROM_UNIXTIME(?) AND end_time >= FROM_UNIXTIME(?) ORDER BY end_time DESC",
#				"query_placeholders": [ "srcip", "dstip", "timestamp", "timestamp" ],
#				"fields": [ "lookup1", "lookup2" ]
#			}
#		},
		"whois": {
			"known_subnets": {
				"10.0.0.0": {
					"end": "10.255.255.255",
					"org": "MyOrg"
				},
				"192.168.0.0": {
					"end": "192.168.255.255",
					"org": "MyOrg"
				},
				"172.16.0.0": {
					"end": "172.31.255.255",
					"org": "MyOrg"
				}
			},
			"known_orgs": {
				"MyOrg": {
					"name": "MyOrg",
					"org": "MyOrg",
					"descr": "MyOrg",
					"cc": "US",
					"country": "United States",
					"city": "Anytown",
					"state": "Somestate"
				}
			}
		}
		#"cif": {
		# Use either server_ip and server_name or base_url
		#	"base_url": "https://127.0.0.1",
		#	"server_ip": "127.0.0.1",
		#	"server_name": "myhostinhostsfile",
		#	"apikey": ""
		#},
		#"dnsdb": {
		#	"apikey": ""
		#}
	},		
	"plugins": {
            "SNORT": "Info::Snort",
            "WINDOWS": "Info::Windows",
            "URL": "Info::Url",
            "BRO_NOTICE": "Info::Bro"
    },
    "info": {
            "snort": {
				"url_templates": [ "http://doc.emergingthreats.net/bin/view/Main/%d" ]
            },
            "url": {
            	"url_templates": [ "http://whois.domaintools.com/%s" ]
            },
            "windows": {
                    "url_templates": [ "http://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=%d" ]
            }
    },
    # How many archive queries can be run simultaneously by all users?  (Can slow system)
    "max_concurrent_archive_queries": 4,
    # How often are queries run for alerts?  Default should be fine here.
    "schedule_interval" : 60,
    # How often should we recreate the node info cache?
    "node_info_cache_timeout": 60,
    # Settings for email alerts
	"email": {
		# Uncomment this and set the correct SMTP server for your org to get email
		#"smtp_server": "mail.example.com",
		# Uncomment this to set the TO address for email if not using AD authentication to provide that info
		#"to": "me@example.com",
		"display_address": "noreply-elsa@example.com",
		"base_url" : "http://elsa/",
		"subject": "ELSA Alert"
	},
	# Secret that is used to create the hash for the result permalinks.  Change it to anything you want, but after you've issued a link, changing it will invalidate that link in the future.
	"link_key" : "secret",
	"yui" : {
		#"local" : "inc",
		"version" : "2.8.1",
		"modifier" : ""
	},
    # This DB stores the query log, user permissions, etc. for the frontend.
    "meta_db" : {
            "dsn" : "dbi:mysql:database=elsa_web",
            "username" : "elsa",
            "password" : "biglog"
    },
    # Auth method.  Values can be "none," "local," "db," and "ldap." 
    "auth": {
		"method" : "none"
		#"method": "local"
		#"method": "ldap"
		#"method": "db"
    },
    # Groups that define who are admins.  These are local groups by default, but can be LDAP groups if using LDAP auth.
    "admin_groups" : [ "system", "admin" ],
    # Example for LDAP auth over Active Directory
    #"ldap" : {
	#	"host" : "ldap.example.com",
	#	"bindDN" : "CN=ldap auth user,OU=AdminAccounts,DC=example,DC=com",
	#	"bindpw" : "goodpass",
	#	"base" : "DC=example,DC=com",
	#	"searchattrs" : "sAMAccountName",
	#	"attr_map" : {
	#	        "email" : "mail",
	#	        "display_name" : "displayName"
	#	},
	#	"groups_attr" : "memberOf",
	#	"extra_attrs" : {
	#	        "uid" : "uid",
	#	        "department" : "department"
	#	},
	#	"admin_groups" : {
	#	        "CN=Admins,OU=groups,DC=example,DC=com" : 1
	#	}
	#},
	# Example config for auth_db using Security Onion, set auth method above to "db"
	#"auth_db": {
	#	"dsn": "dbi:mysql:database=securityonion_db",
	#	"username": "root",
	#	"password": "",
	#	"auth_statement": "SELECT PASSWORD(password) FROM user_info WHERE username=?",
	#	"email_statement": "SELECT email FROM user_info WHERE username=?"
	#},
    # This is the offset for spacing of log ID numbers between peers.  You should not need to change this number (until one node his 1 trillion logs).
    "peer_id_multiplier" : 1000000000000,
    "query_timeout": 10,
    # Backend node configuration
    "nodes" : {
            "127.0.0.1" : {
            	"db": "syslog",
            	"username": "elsa",
            	"password": "biglog"
            }
    },
    # Where to place the ELSA management logs (not the logs we are receiving)
    "logdir" : "/data/elsa/log",
    # Logging level management logs (does not affect logs received).
    "debug_level" : "TRACE",
    "default_start_time_offset": 2
}